1. Create a class employee with the properties: EmpId, EmpName, EmpDept and EmpSalary. Provide
setter and getter methods for these properties. Calculate the salary as per the dept of the
employee. All employee are entitled for basic salary 50000 with Allowances as per the dept. The
percentage of allowances are given in the following map: {admin: 20%, teamlead:70%, technical:
60%, officestaff:10%}.

2. Create a Student Class, 
Input : From the Student
Rollno : Integer type
Name format : ajay KUmar sHaRma
Should be converted to : Ajay Kumar Sharma
3 Subject Marks : Out of 100
90
80
77

Output:
Total Marks 
Percentage
Grade
>=90 - A Grade
<90 - >=70 B Grade
<70 to >=60 C Grade
<60 to >=50 D Grade

E Grade
CollegeName : Fixed

College Name : All Caps
Name : Proper Case
Subjects 
Total 
Percentage
Grade

Note : Named Constructor, Setter and Getter, Compulsory parameter, optional parameter.


3. Write a dart program to create a class Animal with properties [id, name, color]. Create another class called Cat and extends it from Animal. Add new properties sound in String. Create an object of a Cat and print all details.

4. Your program should have two classes – one for the ordinary books - Book, and another for the special ones – GoldenEditionBook

Book - represents a book that holds title, author and price. A book should offer information about itself in the format shown in the output below

GoldenEditionBook - represents a special book holds the same properties as any Book, but its price is always 30% higher

Constraints:

If the author has two names and the second name is starting with a digit- give an error message: "Author not valid!"
If the title's length is less than 3 symbols - give an error message: "Title not valid!"
If the price is zero or it is negative - give an error message: "Price not valid!"

| Book |
|  - author: String |
|  - title: String  |
|  - price: Double  |
|  + Book(author, title, price) |
|  - setters        |
|  + getters        |
|  + toString       |
|  + containsDigit(String)      |


| GoldenEditionBook |
|  - price: Double  |
|  + getPrice () : double |

======================================= MIXINS ======================================

5. For the student class in Question 2, create a mixin to implement the student's behavior using following methods: 
    i. sketchDoodles() --> sketching doodles
    ii. reviewTermPaper() --> read the papers
    iii. powerRun() --> Run for 5 miles

6. Create a class called Calculator with methods called sum, diff, prod, and div that print the sum/difference/product/division of any two integers you give it. Extract the logic in sum/diff/prod/div to a mixin called BasicCalc.
Use the mixin in Calculator class. Create another class called ScientificCalculator that extends the Calculator class and apply the concept of mixins to add more functionality to it.

